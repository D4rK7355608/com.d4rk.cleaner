Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <string name=\"app_description\">The last Android Cleaner you will ever need for every day use!</string>\r\n    <string name=\"notification_update_title\">A new update available!</string>\r\n    <string name=\"summary_notification_update\">A new version of the app is available. Click to update!</string>\r\n    <string name=\"notification_last_time_used_title\">It\\'s been a while!</string>\r\n    <string name=\"summary_notification_last_time_used\"> Let\\'s free up some space! We are happy you are back!</string>\r\n\r\n    <string name=\"welcome\">Welcome</string>\r\n    <string name=\"browse_terms_of_service_and_privacy_policy\">Browse the <i><u>Terms of Service</u></i> and <i><u>Privacy Policy</u></i></string>\r\n    <string name=\"summary_browse_terms_of_service_and_privacy_policy\">Read and agree to our Terms of Service and Privacy Policy to continue</string>\r\n    <string name=\"agree\">Agree</string>\r\n\r\n    <string name=\"navigation_drawer_open\">Open navigation drawer</string>\r\n\r\n    <string name=\"home\">Home</string>\r\n    <string name=\"storage_used\">%1$s/%2$s GB\\nUsed</string>\r\n    <string name=\"analyze\">Analyze</string>\r\n    <string name=\"clean\">Clean</string>\r\n    <string name=\"status_selected_files\">Status: Selected %1$d files</string>\r\n    <string name=\"status_no_files_selected\">Status: No files selected</string>\r\n    <string name=\"select_all\">Select All</string>\r\n    <string name=\"rescan_title\">Rescan?</string>\r\n    <string name=\"rescan_message\">Are you sure you want to scan again?</string>\r\n    <string name=\"file_not_found\">File not found.</string>\r\n    <string name=\"no_files_found\">No files found</string>\r\n    <string name=\"activity_not_found\">Activity not found.</string>\r\n    <string name=\"security_error\">A security error occurred. Please try again later.</string>\r\n    <string name=\"io_error\">An input/output error occurred. Please check your network connection or storage and try again.</string>\r\n    <string name=\"illegal_argument_error\">Invalid input or argument provided. Please check the information and try again.</string>\r\n    <string name=\"unknown_error\">An unknown error occurred.</string>\r\n\r\n    <string name=\"app_manager\">App Manager</string>\r\n    <string name=\"installed_apps\">Installed apps</string>\r\n    <string name=\"system_apps\">System apps</string>\r\n    <string name=\"app_install_files\">App install files (APKs)</string>\r\n    <string name=\"uninstall\">Uninstall</string>\r\n    <string name=\"share\">Share</string>\r\n    <string name=\"app_info\">App info</string>\r\n    <string name=\"installed\">Installed\"</string>\r\n    <string name=\"install\">Install\"</string>\r\n    <string name=\"share_apk\">Share APK</string>\r\n    <string name=\"no_app_installed\">No apps installed</string>\r\n    <string name=\"no_apk_found\">No APK found</string>\r\n    <string name=\"app_loading_error\">Error loading apps.</string>\r\n\r\n    <string name=\"memory_manager\">Memory Manager</string>\r\n    <string name=\"storage_information\">Storage Information</string>\r\n    <string name=\"used\">Used:</string>\r\n    <string name=\"free\">Free:</string>\r\n    <string name=\"total\">Total:</string>\r\n    <string name=\"ram_information\">RAM Information</string>\r\n    <string name=\"used_ram\">Used RAM:</string>\r\n    <string name=\"free_ram\">Free RAM:</string>\r\n    <string name=\"total_ram\">Total RAM:</string>\r\n    <string name=\"categories\">Categories</string>\r\n    <string name=\"system\">System</string>\r\n    <string name=\"music\">Music</string>\r\n    <string name=\"images\">Images</string>\r\n    <string name=\"documents\">Documents</string>\r\n    <string name=\"downloads\">Downloads</string>\r\n    <string name=\"other_files\">Other Files</string>\r\n\r\n    <string name=\"image_optimizer\">Image optimizer</string>\r\n    <string name=\"summary_select_image\">Select the image you want to optimize</string>\r\n    <string name=\"choose_image\">Choose image</string>\r\n    <string name=\"optimize_image\">Optimize image</string>\r\n    <string name=\"image_saved\">Image saved to: </string>\r\n    <string name=\"quick_compress\">Quick Compress</string>\r\n    <string name=\"select_image\">Select image</string>\r\n    <string name=\"low\">Low</string>\r\n    <string name=\"medium\">Medium</string>\r\n    <string name=\"high\">High</string>\r\n    <string name=\"file_size\">File Size (KB)</string>\r\n    <string name=\"enter_a_value\">Enter a value</string>\r\n    <string name=\"manual\">Manual</string>\r\n    <string name=\"width\">Width (px)</string>\r\n    <string name=\"height\">Height (px)</string>\r\n    <string name=\"quality\">Quality</string>\r\n\r\n    <string name=\"settings\">Settings</string>\r\n\r\n    <string name=\"display\">Display</string>\r\n    <string name=\"summary_preference_settings_display\">Personalize your app\\'s look and feel</string>\r\n\r\n    <string name=\"appearance\">Appearance</string>\r\n    <string name=\"dark_theme\">Dark theme</string>\r\n    <string name=\"will_turn_on_automatically_by_system\">Will turn on automatically by the system</string>\r\n    <string name=\"will_never_turn_on_automatically\">Will never turn on automatically</string>\r\n    <string name=\"amoled_mode\">AMOLED mode</string>\r\n    <string name=\"follow_system\">Follow System Mode</string>\r\n    <string name=\"light_mode\">Light Mode</string>\r\n    <string name=\"dark_mode\">Dark Mode</string>\r\n    <string name=\"summary_dark_theme\">Dark theme uses a deep background to help keep your battery alive longer</string>\r\n\r\n    <string name=\"dynamic_colors\">Dynamic colors</string>\r\n    <string name=\"summary_preference_settings_dynamic_colors\">Apply colors from wallpapers to the app theme</string>\r\n\r\n    <string name=\"app_behavior\">App behavior</string>\r\n    <string name=\"bounce_buttons\">Bounce click</string>\r\n    <string name=\"summary_preference_settings_bounce_buttons\">Applies a subtle bounce animation to all clickable elements when clicked</string>\r\n\r\n    <string name=\"navigation\">Navigation</string>\r\n    <string name=\"startup_page\">Startup page</string>\r\n    <string name=\"summary_preference_settings_startup_page\">Choose the screen to be displayed when the app starts.</string>\r\n    <string name=\"dialog_startup_subtitle\">Choose your preferred startup page:</string>\r\n    <string name=\"dialog_info_startup\">Configures the initial screen presented to users upon launching the appli0cation. This setting influences the user\\'s first interaction with the app and can be tailored to specific user segments or product goals.</string>\r\n\r\n    <string name=\"language\">Language</string>\r\n    <string name=\"summary_preference_settings_language\">Changes the language used in the app</string>\r\n    <string name=\"dialog_language_subtitle\">Select your preferred language</string>\r\n    <string name=\"dialog_info_language\">Personalize your experience with your preferred language. Any language changes you make take effect right away, ensuring a seamless experience in your chosen language</string>\r\n\r\n    <string name=\"cleaning\">Cleaning</string>\r\n    <string name=\"summary_preference_settings_cleaning\">Customize your cleaning experience</string>\r\n    <string name=\"filters\">Filters</string>\r\n    <string name=\"generic_filter\">Generic filter</string>\r\n    <string name=\"summary_preference_settings_generic_filter\">Delete temp, log, logs, &amp; other useless files &amp; folders</string>\r\n    <string name=\"delete_empty_folders\">Delete empty folders</string>\r\n    <string name=\"delete_archives\">Delete archives</string>\r\n    <string name=\"summary_preference_settings_archive_filter\">Delete archives from your device</string>\r\n    <string name=\"delete_corpse_files\">Delete corpse files</string>\r\n    <string name=\"summary_preference_settings_delete_corpse_files\">Delete files left over from uninstalled/removed apps</string>\r\n    <string name=\"delete_apk_files\">Delete APK files</string>\r\n    <string name=\"summary_preference_settings_delete_apk_files\">Delete installer files (.apk) files for Android</string>\r\n    <string name=\"media\">Media</string>\r\n    <string name=\"delete_audio\">Delete audio</string>\r\n    <string name=\"summary_preference_settings_delete_audio\">Delete the audio files from the device</string>\r\n    <string name=\"delete_video\">Delete video</string>\r\n    <string name=\"summary_preference_settings_delete_video\">Delete the video files from the device</string>\r\n    <string name=\"delete_images\">Delete images</string>\r\n    <string name=\"summary_preference_settings_delete_images\">Delete the image files from the device</string>\r\n    <string name=\"delete_invalid_media\">Delete invalid media</string>\r\n    <string name=\"summary_preference_settings_delete_invalid_media\">Delete corrupted images</string>\r\n    <string name=\"scanner\">Scanner</string>\r\n    <string name=\"clipboard_clean\">Clipboard clean</string>\r\n\r\n    <string name=\"notifications\">Notifications</string>\r\n    <string name=\"summary_preference_settings_notifications\">Manage app notifications</string>\r\n\r\n    <string name=\"app_usage_notifications\">App Usage Notifications</string>\r\n    <string name=\"update_notifications\">Update Notifications</string>\r\n\r\n    <string name=\"advanced\">Advanced</string>\r\n    <string name=\"summary_preference_settings_advanced\">Explore more advanced settings</string>\r\n    <string name=\"error_reporting\">Error reporting</string>\r\n    <string name=\"bug_report\">Bug report</string>\r\n    <string name=\"summary_preference_settings_bug_report\">Send bug reports and feature requests to the app\\'s GitHub repository issues page</string>\r\n\r\n    <string name=\"security_and_privacy\">Security &amp; privacy</string>\r\n    <string name=\"summary_preference_settings_privacy_and_security\">Manage your privacy settings</string>\r\n    <string name=\"privacy\">Privacy</string>\r\n    <string name=\"privacy_policy\">Privacy Policy</string>\r\n    <string name=\"summary_preference_settings_privacy_policy\">View the policy that governs how we handle your data</string>\r\n    <string name=\"terms_of_service\">Terms of Service</string>\r\n    <string name=\"summary_preference_settings_terms_of_service\">Review the terms you agree to when using our service</string>\r\n    <string name=\"code_of_conduct\">Code of Conduct</string>\r\n    <string name=\"summary_preference_settings_code_of_conduct\">Understand the rules and guidelines for behavior within our service</string>\r\n\r\n    <string name=\"permissions\">Permissions</string>\r\n    <string name=\"summary_preference_settings_permissions\">Manage the permissions granted to our service</string>\r\n    <string name=\"normal\">Normal</string>\r\n    <string name=\"ad_id\">Ad id [AD_ID]</string>\r\n    <string name=\"summary_preference_permissions_ad_id\">Allows the app to retrieve and use the advertising identifier associated with the user\\'s device, providing personalized ads, measuring ad effectiveness, and showing ads on Android 13 or later devices.</string>\r\n    <string name=\"internet\">Internet [INTERNET]</string>\r\n    <string name=\"summary_preference_permissions_internet\">Allows the app to establish an internet connection to send error reports or check for updates.</string>\r\n    <string name=\"post_notifications\">Post notifications [POST_NOTIFICATIONS]</string>\r\n    <string name=\"summary_preference_permissions_post_notifications\">Allows the app to display notifications on the devices with Android 13 or later.</string>\r\n    <string name=\"runtime\">Runtime</string>\r\n    <string name=\"access_network_state\">Access network state [ACCESS_NETWORK_STATE]</string>\r\n    <string name=\"summary_preference_permissions_access_network_state\">Allows the app to check network connectivity and retrieve information about Wi-Fi, including enabled status and connected Wi-Fi device names.</string>\r\n    <string name=\"access_notification_policy\">Access notification policy [ACCESS_NOTIFICATION_POLICY]</string>\r\n    <string name=\"summary_preference_permissions_access_notification_policy\">Allows the app to access and modify the device\\'s notification policy, controlling how and when notifications are displayed to the user and providing custom notification management features.</string>\r\n    <string name=\"billing\">Billing [BILLING]</string>\r\n    <string name=\"summary_preference_permissions_billing\">Allows the app to use the Google Play Billing Library to handle in-app purchases and donations</string>\r\n    <string name=\"check_license\">Check license [CHECK_LICENSE]</string>\r\n    <string name=\"summary_preference_permissions_check_license\">Allows the app to verify its compliance with the license agreement and enforce licensing terms to protect intellectual property.</string>\r\n    <string name=\"foreground_service\">Foreground service [FOREGROUND_SERVICE]</string>\r\n    <string name=\"summary_preference_permissions_foreground_service\">Allows the app to create and use services that run in the foreground, giving them priority over other background processes and improving performance and reliability.</string>\r\n    <string name=\"request_delete_packages\">Request delete packages [REQUEST_DELETE_PACKAGES]</string>\r\n    <string name=\"summary_preference_permissions_request_delete_packages\">Allows the app to request the deletion of packages. This can be used to uninstall other apps from the device</string>\r\n    <string name=\"storage\">Storage</string>\r\n    <string name=\"access_media_location\">Access media location [ACCESS_MEDIA_LOCATION]</string>\r\n    <string name=\"summary_preference_permissions_access_media_location\">Allows the app to access the device\\'s media files location</string>\r\n    <string name=\"action_open_document_tree\">Action open document tree [ACTION_OPEN_DOCUMENT_TREE]</string>\r\n    <string name=\"summary_preference_permissions_action_open_document_tree\">Allows the app to access to a tree of documents, including the ability to read and write files in the tree</string>\r\n    <string name=\"manage_external_storage\">Manage external storage [MANAGE_EXTERNAL_STORAGE]</string>\r\n    <string name=\"summary_preference_permissions_manage_external_storage\">Allows the app to perform actions like deleting and renaming files on the device\\'s storage, including both internal and external storage</string>\r\n    <string name=\"package_usage_stats\">Package usage stats [PACKAGE_USAGE_STATS]</string>\r\n    <string name=\"summary_preference_permissions_package_usage_stats\">Allows the app to access information about the user\\'s app usage, including which apps have been used, how long they have been used, and how frequently they have been used</string>\r\n    <string name=\"query_all_packages\">Query all packages [QUERY_ALL_PACKAGES]</string>\r\n    <string name=\"summary_preference_permissions_query_all_packages\">Allows the app to query for information about all installed packages on the device. The app uses this information to determine which files to keep or delete</string>\r\n    <string name=\"read_external_storage\">Read external storage [READ_EXTERNAL_STORAGE]</string>\r\n    <string name=\"summary_preference_permissions_read_external_storage\">Allows the app to read files from the device\\'s storage, including both internal and external storage</string>\r\n    <string name=\"read_media_audio\">Read media audio [READ_MEDIA_AUDIO]</string>\r\n    <string name=\"summary_preference_permissions_read_media_audio\">Allows the app to read audio files from the device\\'s storage</string>\r\n    <string name=\"read_media_images\">Read media images [READ_MEDIA_IMAGES]</string>\r\n    <string name=\"summary_preference_permissions_read_media_images\">Allows the app to read image files from the device\\'s storage</string>\r\n    <string name=\"read_media_video\">Read media video [READ_MEDIA_VIDEO]</string>\r\n    <string name=\"summary_preference_permissions_read_media_video\">Allows the app to read video files from the device\\'s storage</string>\r\n    <string name=\"write_external_storage\">Write external storage [WRITE_EXTERNAL_STORAGE]</string>\r\n    <string name=\"summary_preference_permissions_write_external_storage\">Allows the app to write files to the device\\'s storage, including both internal and external storage</string>\r\n\r\n    <string name=\"ads\">Ads</string>\r\n    <string name=\"summary_preference_settings_ads\">Control how we use your information to show you relevant ads</string>\r\n    <string name=\"display_ads\">Display ads</string>\r\n    <string name=\"personalized_ads\">Personalized ads</string>\r\n    <string name=\"summary_ads_personalized_ads\">Choose how we personalize ads for you based on your interests</string>\r\n    <string name=\"summary_ads\">See ads that are relevant to you. Manage the information used to show personalized ads based on your app activity. You can always turn off personalization here.\\n</string>\r\n\r\n    <string name=\"usage_and_diagnostics\">Usage and diagnostics</string>\r\n    <string name=\"summary_preference_settings_usage_and_diagnostics\">Share data to help improve Cleaner for Android</string>\r\n    <string name=\"summary_usage_and_diagnostics\">Help improve your experience by automatically sending diagnostic, device, and app usage data to us. This will help improve app performance, stability, and other enhancements. Some aggregate data will also help our apps.\\n\\nThis is general information about your device and how you use our apps (such as battery level, system and app activity, and errors). The data will be used to improve our apps\\n\\nTurning off this feature doesn\\'t affect your device\\'s ability to send the information needed for essential services such as app updates and security.\\n</string>\r\n\r\n    <string name=\"legal\">Legal</string>\r\n    <string name=\"legal_notices\">Legal notices</string>\r\n    <string name=\"summary_preference_settings_legal_notices\">View legal information about our service</string>\r\n    <string name=\"license\">License</string>\r\n\r\n    <string name=\"about\">About</string>\r\n    <string name=\"summary_preference_settings_about\">Learn more about Cleaner</string>\r\n\r\n    <string name=\"app_build_version\">Application build version</string>\r\n    <string name=\"summary_preference_settings_oss\">License details for open source software</string>\r\n    <string name=\"device_info\">Device Info</string>\r\n    <string name=\"app_build\">App Build: Release\\n%1$s\\n%2$s\\n%3$s\\n%4$s\\n%5$s</string>\r\n    <string name=\"manufacturer\">Manufacturer:</string>\r\n    <string name=\"device_model\">Device Model:</string>\r\n    <string name=\"android_version\">Android Version:</string>\r\n    <string name=\"api_level\">API Level:</string>\r\n    <string name=\"snack_device_info_copied\">Device info copied to clipboard</string>\r\n\r\n    <string name=\"help_and_feedback\">Help &amp; feedback</string>\r\n    <string name=\"help\">Help</string>\r\n    <string name=\"faq\">FAQ</string>\r\n    <string name=\"view_in_google_play_store\">View in Google Play Store</string>\r\n    <string name=\"version_info\">Version info</string>\r\n    <string name=\"version\">Version %1$s</string>\r\n    <string name=\"beta_program\">Beta program</string>\r\n    <string name=\"question_1\">What is Cleaner?</string>\r\n    <string name=\"summary_preference_faq_1\">Cleaner is a free and open-source Android app that helps you optimize your device\\'s performance and free up storage space. It can scan your device for unnecessary files and delete them, as well clear your cache to improve your device\\'s speed</string>\r\n    <string name=\"question_2\">Is Cleaner safe to use?</string>\r\n    <string name=\"summary_preference_faq_2\">Yes, Cleaner is safe to use. It only removes files that are not essential to the operation of your device or apps, and it does not delete any of your personal data or important system files</string>\r\n    <string name=\"question_3\">How do I use Cleaner?</string>\r\n    <string name=\"summary_preference_faq_3\">To use Cleaner, simply download and install the app from the Google Play Store or a reputable third-party app store. Then, open the app and follow the prompts to scan your device and delete unnecessary files. You can also access the app\\'s settings to customize the types of files that Cleaner looks for and deletes</string>\r\n    <string name=\"question_4\">Can Cleaner delete app cache?</string>\r\n    <string name=\"summary_preference_faq_4\">Yes, Cleaner can delete app cache. However, it is important to note that deleting cache may cause the app to take longer to load or perform certain tasks the next time you use it</string>\r\n    <string name=\"question_5\">Does Cleaner require root access?</string>\r\n    <string name=\"summary_preference_faq_5\">No, Cleaner does not require root access to work. You can use it on any Android device without rooting your device</string>\r\n    <string name=\"question_6\">Is Cleaner available for iOS?</string>\r\n    <string name=\"summary_preference_faq_6\">No, Cleaner is currently only available for Android devices</string>\r\n    <string name=\"question_7\">Does Cleaner improve battery life?</string>\r\n    <string name=\"summary_preference_faq_7\">Using Cleaner to clear your cache may help improve your device\\'s battery life by reducing the amount of power and resources that are used by unnecessary processes. However, the extent to which Cleaner can improve your battery life will depend on various factors such as your device\\'s make and model, the apps you use, and your usage habits</string>\r\n    <string name=\"question_8\">How often should I use Cleaner?</string>\r\n    <string name=\"summary_preference_faq_8\">There is no set rule for how often you should use Cleaner, as it will depend on your device\\'s usage and the amount of unnecessary files that accumulate over time. Some users may find it helpful to run Cleaner weekly or monthly, while others may only need to use it occasionally</string>\r\n    <string name=\"question_9\">Is Cleaner compatible with all Android devices?</string>\r\n    <string name=\"summary_preference_faq_9\">Cleaner should be compatible with most Android devices that meet the app\\'s minimum system requirements. However, it is always a good idea to check the app\\'s page on the Google Play Store or the app store you are using to confirm compatibility with your specific device. If you encounter any issues while using Cleaner, you can try troubleshooting the problem or contacting the app\\'s support team for assistance</string>\r\n    <string name=\"feedback\">Feedback</string>\r\n\r\n    <string name=\"updates\">Updates</string>\r\n\r\n    <string name=\"support_us\">Support Us</string>\r\n    <string name=\"paid_support\">Paid Support</string>\r\n    <string name=\"summary_donations\">No matter how much you donate, you will help us keep our app running and improve our features. We appreciate your generosity and kindness!</string>\r\n    <string name=\"non_paid_support\">Non-Paid Support</string>\r\n    <string name=\"web_ad\">Web Ad</string>\r\n\r\n    <string name=\"snack_app_updated\">The app has been successfully updated</string>\r\n    <string name=\"snack_update_failed\">The update process encountered an issue</string>\r\n    <string name=\"try_again\">Try again</string>\r\n    <string name=\"summary_share_message\">Check out this amazing app that I\\'m using! It has some really cool features that you might find interesting. You can download it from the Play Store at: %1$s</string>\r\n    <string name=\"learn_more\">Learn more</string>\r\n\r\n    <string name=\"close\">Close?</string>\r\n    <string name=\"require_restart\">Require restart!</string>\r\n    <string name=\"snack_network_error\">Network error occurred while checking for updates</string>\r\n    <string name=\"snack_general_error\">An error occurred while checking for updates</string>\r\n    <string name=\"summary_close\">Are you sure you want to exit?</string>\r\n    <string name=\"summary_require_restart\">To take effect please restart the app!</string>\r\n\r\n    <string name=\"snack_no_image\">No image provided</string>\r\n    <string name=\"snack_validate_file\">Please select a valid file size</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	(revision 57c1e1bfa29ea2909c3b8e44202c38eb1a5c37c7)
+++ b/app/src/main/res/values/strings.xml	(date 1727770683044)
@@ -16,6 +16,11 @@
     <string name="storage_used">%1$s/%2$s GB\nUsed</string>
     <string name="analyze">Analyze</string>
     <string name="clean">Clean</string>
+    <string name="apks">APKs</string>
+    <string name="archives">Archives</string>
+    <string name="videos">Videos</string>
+    <string name="audios">Audios</string>
+    <string name="other">Other</string>
     <string name="status_selected_files">Status: Selected %1$d files</string>
     <string name="status_no_files_selected">Status: No files selected</string>
     <string name="select_all">Select All</string>
Index: gradle/libs.versions.toml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[versions]\r\nagp = \"8.6.1\"\r\nappcompat = \"1.7.0\"\r\nappUpdateKtx = \"2.1.0\"\r\nbilling = \"7.1.0\"\r\ncoilCompose = \"2.7.0\"\r\ncoilVideo = \"2.7.0\"\r\ncomposeBom = \"2024.09.02\"\r\ncompressor = \"3.0.1\"\r\nconstraintlayoutCompose = \"1.0.1\"\r\ncoreSplashscreen = \"1.0.1\"\r\ndatastoreCore = \"1.1.1\"\r\nfirebaseBom = \"33.3.0\"\r\nlifecycle = \"2.8.6\"\r\nvolley = \"1.2.1\"\r\nkotlin = \"2.0.10\"\r\ncoreKtx = \"1.13.1\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.2.1\"\r\nespressoCore = \"3.6.1\"\r\nkotlinxCoroutinesAndroid = \"1.9.0\"\r\nactivityCompose = \"1.9.2\"\r\ncomposeUi = \"1.7.2\"\r\ncomposeMaterial3 = \"1.3.0\"\r\ngoogle-services = \"4.4.2\"\r\ngoogle-oss-services = \"0.10.6\"\r\ngoogle-firebase-crashlytics = \"3.0.2\"\r\nmaterial = \"1.12.0\"\r\nmultidex = \"2.0.1\"\r\nnavigationCompose = \"2.8.1\"\r\nplayServicesAds = \"23.3.0\"\r\nplayServicesOssLicenses = \"17.1.0\"\r\nreviewKtx = \"2.0.1\"\r\nworkRuntimeKtx = \"2.9.1\"\r\n\r\n\r\n[libraries]\r\nandroidx-appcompat = { module = \"androidx.appcompat:appcompat\", version.ref = \"appcompat\" }\r\nandroidx-compose-bom = { module = \"androidx.compose:compose-bom\", version.ref = \"composeBom\" }\r\nandroidx-constraintlayout-compose = { module = \"androidx.constraintlayout:constraintlayout-compose\", version.ref = \"constraintlayoutCompose\" }\r\nandroidx-core-ktx = { group = \"androidx.core\", name = \"core-ktx\", version.ref = \"coreKtx\" }\r\nandroidx-core-splashscreen = { module = \"androidx.core:core-splashscreen\", version.ref = \"coreSplashscreen\" }\r\nandroidx-datastore-preferences = { module = \"androidx.datastore:datastore-core\", version.ref = \"datastoreCore\" }\r\nandroidx-foundation = { module = \"androidx.compose.foundation:foundation\" }\r\nandroidx-compose-runtime = { module = \"androidx.compose.runtime:runtime\" }\r\nandroidx-lifecycle-common-java8 = { module = \"androidx.lifecycle:lifecycle-common-java8\", version.ref = \"lifecycle\" }\r\nandroidx-lifecycle-livedata-ktx = { module = \"androidx.lifecycle:lifecycle-livedata-ktx\", version.ref = \"lifecycle\" }\r\nandroidx-lifecycle-process = { module = \"androidx.lifecycle:lifecycle-process\", version.ref = \"lifecycle\" }\r\nandroidx-lifecycle-runtime-compose = { module = \"androidx.lifecycle:lifecycle-runtime-compose\", version.ref = \"lifecycle\" }\r\nandroidx-lifecycle-viewmodel-compose = { module = \"androidx.lifecycle:lifecycle-viewmodel-compose\", version.ref = \"lifecycle\" }\r\nandroidx-lifecycle-viewmodel-ktx = { module = \"androidx.lifecycle:lifecycle-viewmodel-ktx\", version.ref = \"lifecycle\" }\r\nandroidx-multidex = { module = \"androidx.multidex:multidex\", version.ref = \"multidex\" }\r\nandroidx-material-icons-extended = { module = \"androidx.compose.material:material-icons-extended\" }\r\nandroidx-runtime-livedata = { module = \"androidx.compose.runtime:runtime-livedata\" }\r\nandroidx-runtime-rxjava2 = { module = \"androidx.compose.runtime:runtime-rxjava2\" }\r\nandroidx-work-runtime-ktx = { module = \"androidx.work:work-runtime-ktx\", version.ref = \"workRuntimeKtx\" }\r\napp-update-ktx = { module = \"com.google.android.play:app-update-ktx\", version.ref = \"appUpdateKtx\" }\r\nbilling = { module = \"com.android.billingclient:billing\", version.ref = \"billing\" }\r\ncoil-compose = { module = \"io.coil-kt:coil-compose\", version.ref = \"coilCompose\" }\r\ncoil-video = { module = \"io.coil-kt:coil-video\", version.ref = \"coilVideo\" }\r\ncompressor = { module = \"id.zelory:compressor\", version.ref = \"compressor\" }\r\ndatastore-preferences = { module = \"androidx.datastore:datastore-preferences\", version.ref = \"datastoreCore\" }\r\nfirebase-analytics-ktx = { module = \"com.google.firebase:firebase-analytics-ktx\" }\r\nfirebase-bom = { module = \"com.google.firebase:firebase-bom\", version.ref = \"firebaseBom\" }\r\nfirebase-crashlytics-ktx = { module = \"com.google.firebase:firebase-crashlytics-ktx\" }\r\nfirebase-perf = { module = \"com.google.firebase:firebase-perf\" }\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\nandroidx-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nandroidx-espresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nandroidx-lifecycle-runtime-ktx = { group = \"androidx.lifecycle\", name = \"lifecycle-runtime-ktx\", version.ref = \"lifecycle\" }\r\nandroidx-activity-compose = { group = \"androidx.activity\", name = \"activity-compose\", version.ref = \"activityCompose\" }\r\nandroidx-ui = { group = \"androidx.compose.ui\", name = \"ui\", version.ref = \"composeUi\" }\r\nandroidx-ui-graphics = { group = \"androidx.compose.ui\", name = \"ui-graphics\" }\r\nandroidx-ui-tooling = { group = \"androidx.compose.ui\", name = \"ui-tooling\" }\r\nandroidx-ui-tooling-preview = { group = \"androidx.compose.ui\", name = \"ui-tooling-preview\" }\r\nandroidx-ui-test-manifest = { group = \"androidx.compose.ui\", name = \"ui-test-manifest\", version.ref = \"composeUi\" }\r\nui-test-junit4 = { module = \"androidx.compose.ui:ui-test-junit4\", version.ref = \"composeUi\" }\r\nandroidx-material3 = { group = \"androidx.compose.material3\", name = \"material3\", version.ref = \"composeMaterial3\" }\r\nandroidx-navigation-compose = { group = \"androidx.navigation\", name = \"navigation-compose\", version.ref = \"navigationCompose\" }\r\nkotlinx-coroutines-android = { module = \"org.jetbrains.kotlinx:kotlinx-coroutines-android\", version.ref = \"kotlinxCoroutinesAndroid\" }\r\nmaterial = { module = \"com.google.android.material:material\", version.ref = \"material\" }\r\nplay-services-ads = { module = \"com.google.android.gms:play-services-ads\", version.ref = \"playServicesAds\" }\r\nplay-services-oss-licenses = { module = \"com.google.android.gms:play-services-oss-licenses\", version.ref = \"playServicesOssLicenses\" }\r\nreview-ktx = { module = \"com.google.android.play:review-ktx\", version.ref = \"reviewKtx\" }\r\nvolley = { module = \"com.android.volley:volley\", version.ref = \"volley\" }\r\n\r\n[plugins]\r\nandroidApplication = { id = \"com.android.application\", version.ref = \"agp\" }\r\nandroidLibrary = { id = \"com.android.library\", version.ref = \"agp\" }\r\njetbrainsKotlinAndroid = { id = \"org.jetbrains.kotlin.android\", version.ref = \"kotlin\" }\r\ngooglePlayServices = { id = \"com.google.gms.google-services\", version.ref = \"google-services\" }\r\ngoogleOssServices = { id = \"com.google.android.gms.oss-licenses-plugin\", version.ref = \"google-oss-services\" }\r\ngoogleFirebase = { id = \"com.google.firebase.crashlytics\", version.ref = \"google-firebase-crashlytics\" }\r\ncompose-compiler = { id = \"org.jetbrains.kotlin.plugin.compose\", version.ref = \"kotlin\" }
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
--- a/gradle/libs.versions.toml	(revision 57c1e1bfa29ea2909c3b8e44202c38eb1a5c37c7)
+++ b/gradle/libs.versions.toml	(date 1727770813792)
@@ -28,12 +28,11 @@
 material = "1.12.0"
 multidex = "2.0.1"
 navigationCompose = "2.8.1"
-playServicesAds = "23.3.0"
+playServicesAds = "23.4.0"
 playServicesOssLicenses = "17.1.0"
 reviewKtx = "2.0.1"
 workRuntimeKtx = "2.9.1"
 
-
 [libraries]
 androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
 androidx-compose-bom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }
Index: app/src/main/kotlin/com/d4rk/cleaner/ui/screens/home/HomeScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.d4rk.cleaner.ui.screens.home\r\n\r\nimport android.app.Activity\r\nimport android.content.Context\r\nimport androidx.compose.animation.AnimatedContent\r\nimport androidx.compose.animation.Crossfade\r\nimport androidx.compose.animation.animateColorAsState\r\nimport androidx.compose.animation.animateContentSize\r\nimport androidx.compose.animation.core.tween\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.interaction.MutableInteractionSource\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.aspectRatio\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.offset\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.layout.width\r\nimport androidx.compose.foundation.lazy.LazyColumn\r\nimport androidx.compose.foundation.pager.HorizontalPager\r\nimport androidx.compose.foundation.pager.PagerState\r\nimport androidx.compose.foundation.pager.rememberPagerState\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.Check\r\nimport androidx.compose.material.icons.outlined.Close\r\nimport androidx.compose.material.icons.outlined.Delete\r\nimport androidx.compose.material.icons.outlined.DeleteForever\r\nimport androidx.compose.material.icons.outlined.FolderOff\r\nimport androidx.compose.material.icons.outlined.Refresh\r\nimport androidx.compose.material3.Button\r\nimport androidx.compose.material3.ButtonDefaults\r\nimport androidx.compose.material3.Card\r\nimport androidx.compose.material3.Checkbox\r\nimport androidx.compose.material3.CircularProgressIndicator\r\nimport androidx.compose.material3.FilterChip\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.IconButton\r\nimport androidx.compose.material3.MaterialTheme\r\nimport androidx.compose.material3.OutlinedButton\r\nimport androidx.compose.material3.OutlinedCard\r\nimport androidx.compose.material3.ScrollableTabRow\r\nimport androidx.compose.material3.Tab\r\nimport androidx.compose.material3.TabRowDefaults\r\nimport androidx.compose.material3.TabRowDefaults.tabIndicatorOffset\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.LaunchedEffect\r\nimport androidx.compose.runtime.collectAsState\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.runtime.rememberCoroutineScope\r\nimport androidx.compose.runtime.setValue\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.layout.ContentScale\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.res.stringResource\r\nimport androidx.compose.ui.text.style.TextOverflow\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.lifecycle.viewmodel.compose.viewModel\r\nimport coil.ImageLoader\r\nimport coil.compose.AsyncImage\r\nimport coil.decode.VideoFrameDecoder\r\nimport coil.disk.DiskCache\r\nimport coil.memory.MemoryCache\r\nimport coil.request.ImageRequest\r\nimport coil.request.videoFramePercent\r\nimport com.d4rk.cleaner.R\r\nimport com.d4rk.cleaner.data.model.ui.error.UiErrorModel\r\nimport com.d4rk.cleaner.data.model.ui.screens.UiHomeModel\r\nimport com.d4rk.cleaner.ui.components.CircularDeterminateIndicator\r\nimport com.d4rk.cleaner.ui.components.NonLazyGrid\r\nimport com.d4rk.cleaner.ui.components.animations.bounceClick\r\nimport com.d4rk.cleaner.ui.components.animations.hapticPagerSwipe\r\nimport com.d4rk.cleaner.ui.components.dialogs.ErrorAlertDialog\r\nimport com.d4rk.cleaner.ui.components.dialogs.RescanAlertDialog\r\nimport com.d4rk.cleaner.utils.PermissionsUtils\r\nimport com.d4rk.cleaner.utils.TimeHelper\r\nimport com.d4rk.cleaner.utils.cleaning.getFileIcon\r\nimport com.google.common.io.Files.getFileExtension\r\nimport kotlinx.coroutines.CoroutineScope\r\nimport kotlinx.coroutines.launch\r\nimport java.io.File\r\nimport java.text.SimpleDateFormat\r\nimport java.util.Date\r\nimport java.util.Locale\r\n\r\n@Composable\r\nfun HomeScreen() {\r\n    val context : Context = LocalContext.current\r\n    val viewModel : HomeViewModel = viewModel()\r\n    val uiState : UiHomeModel by viewModel.uiState.collectAsState()\r\n    val uiErrorModel : UiErrorModel by viewModel.uiErrorModel.collectAsState()\r\n\r\n    val imageLoader : ImageLoader = remember {\r\n        ImageLoader.Builder(context).memoryCache {\r\n            MemoryCache.Builder(context).maxSizePercent(percent = 0.24).build()\r\n        }.diskCache {\r\n            DiskCache.Builder().directory(context.cacheDir.resolve(relative = \"image_cache\"))\r\n                    .maxSizePercent(percent = 0.02).build()\r\n        }.build()\r\n    }\r\n    var showRescanDialog : Boolean by remember { mutableStateOf(value = false) }\r\n\r\n    LaunchedEffect(Unit) {\r\n        if (! PermissionsUtils.hasStoragePermissions(context)) {\r\n            PermissionsUtils.requestStoragePermissions(context as Activity)\r\n        }\r\n    }\r\n\r\n    LaunchedEffect(uiState.showRescanDialog) {\r\n        showRescanDialog = uiState.showRescanDialog\r\n    }\r\n\r\n    if (showRescanDialog) {\r\n        RescanAlertDialog(onYes = {\r\n            viewModel.rescan()\r\n            showRescanDialog = false\r\n        } , onDismiss = {\r\n            showRescanDialog = false\r\n        })\r\n    }\r\n\r\n    if (uiErrorModel.showErrorDialog) {\r\n        ErrorAlertDialog(errorMessage = uiErrorModel.errorMessage ,\r\n                         onDismiss = { viewModel.dismissErrorDialog() })\r\n    }\r\n\r\n    Column(modifier = Modifier.fillMaxSize()) {\r\n        Box(\r\n            modifier = Modifier\r\n                    .weight(4f)\r\n                    .fillMaxWidth()\r\n        ) {\r\n            CircularDeterminateIndicator(progress = uiState.progress ,\r\n                                         modifier = Modifier\r\n                                                 .align(Alignment.TopCenter)\r\n                                                 .offset(y = 98.dp) ,\r\n                                         onClick = { viewModel.analyze() })\r\n\r\n            Crossfade(\r\n                targetState = uiState.showCleaningComposable ,\r\n                animationSpec = tween(durationMillis = 300) ,\r\n                label = \"\"\r\n            ) { showCleaningComposable ->\r\n                if (showCleaningComposable) {\r\n                    AnalyzeComposable(imageLoader)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun AnalyzeComposable(imageLoader : ImageLoader) {\r\n    val viewModel : HomeViewModel = viewModel()\r\n    val uiState : UiHomeModel by viewModel.uiState.collectAsState()\r\n    val context = LocalContext.current\r\n    val coroutineScope : CoroutineScope = rememberCoroutineScope()\r\n    val enabled = uiState.selectedFileCount > 0\r\n    val apkExtensions = remember { context.resources.getStringArray(R.array.apk_extensions) }\r\n    val imageExtensions = remember { context.resources.getStringArray(R.array.image_extensions) }\r\n    val videoExtensions = remember { context.resources.getStringArray(R.array.video_extensions) }\r\n    val audioExtensions = remember { context.resources.getStringArray(R.array.audio_extensions) }\r\n    val archiveExtensions =\r\n            remember { context.resources.getStringArray(R.array.archive_extensions) }\r\n\r\n    val groupedFiles = remember(\r\n        uiState.scannedFiles ,\r\n        apkExtensions ,\r\n        imageExtensions ,\r\n        videoExtensions ,\r\n        audioExtensions ,\r\n        archiveExtensions\r\n    ) {\r\n        uiState.scannedFiles.groupBy { file ->\r\n            when (file.extension.lowercase()) {\r\n                in apkExtensions -> {\r\n                    return@groupBy \"APKs\"\r\n                }\r\n\r\n                in imageExtensions -> {\r\n                    return@groupBy \"Images\"\r\n                }\r\n\r\n                in videoExtensions -> {\r\n                    return@groupBy \"Videos\"\r\n                }\r\n\r\n                in audioExtensions -> {\r\n                    return@groupBy \"Audios\"\r\n                }\r\n\r\n                in archiveExtensions -> {\r\n                    return@groupBy \"Archives\"\r\n                }\r\n\r\n                else -> {\r\n                    return@groupBy \"Others\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    Column(\r\n        modifier = Modifier\r\n                .animateContentSize()\r\n                .fillMaxWidth()\r\n                .padding(16.dp) ,\r\n        horizontalAlignment = Alignment.End\r\n    ) {\r\n        OutlinedCard(\r\n            modifier = Modifier\r\n                    .weight(1f)\r\n                    .fillMaxWidth() ,\r\n        ) {\r\n            when {\r\n                uiState.scannedFiles.isEmpty() -> {\r\n                    Box(modifier = Modifier.fillMaxSize() , contentAlignment = Alignment.Center) {\r\n                        CircularProgressIndicator()\r\n                    }\r\n                }\r\n\r\n                uiState.noFilesFound -> {\r\n                    Box(modifier = Modifier.fillMaxSize() , contentAlignment = Alignment.Center) {\r\n                        Column(horizontalAlignment = Alignment.CenterHorizontally) {\r\n                            Icon(\r\n                                imageVector = Icons.Outlined.FolderOff ,\r\n                                contentDescription = null ,\r\n                                modifier = Modifier.size(64.dp) ,\r\n                                tint = MaterialTheme.colorScheme.onSurface\r\n                            )\r\n                            Spacer(modifier = Modifier.height(16.dp))\r\n                            Text(\r\n                                text = stringResource(id = R.string.no_files_found) ,\r\n                                style = MaterialTheme.typography.bodyLarge ,\r\n                                color = MaterialTheme.colorScheme.onSurface\r\n                            )\r\n\r\n                            OutlinedButton(modifier = Modifier.bounceClick() , onClick = {\r\n                                viewModel.rescanFiles()\r\n                            }) {\r\n                                Icon(\r\n                                    modifier = Modifier.size(ButtonDefaults.IconSize) ,\r\n                                    imageVector = Icons.Outlined.Refresh ,\r\n                                    contentDescription = \"Close\"\r\n                                )\r\n                                Spacer(modifier = Modifier.size(ButtonDefaults.IconSpacing))\r\n                                Text(\"Try again\")\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                else -> {\r\n                    val tabs = groupedFiles.keys.toList()\r\n                    val pagerState : PagerState = rememberPagerState(pageCount = { tabs.size })\r\n\r\n                    Row(\r\n                        modifier = Modifier.fillMaxWidth() ,\r\n                        verticalAlignment = Alignment.CenterVertically\r\n                    ) {\r\n                        ScrollableTabRow(\r\n                            selectedTabIndex = pagerState.currentPage ,\r\n                            modifier = Modifier.weight(1f) ,\r\n                            edgePadding = 0.dp ,\r\n                            indicator = { tabPositions ->\r\n                                TabRowDefaults.PrimaryIndicator(\r\n                                    modifier = Modifier.tabIndicatorOffset(tabPositions[pagerState.currentPage]) ,\r\n                                    shape = RoundedCornerShape(\r\n                                        topStart = 3.dp ,\r\n                                        topEnd = 3.dp ,\r\n                                        bottomEnd = 0.dp ,\r\n                                        bottomStart = 0.dp ,\r\n                                    ) ,\r\n                                )\r\n                            } ,\r\n                        ) {\r\n                            tabs.forEachIndexed { index , title ->\r\n                                Tab(modifier = Modifier.bounceClick() ,\r\n                                    selected = pagerState.currentPage == index ,\r\n                                    onClick = {\r\n                                        coroutineScope.launch {\r\n                                            pagerState.animateScrollToPage(index)\r\n                                        }\r\n                                    } ,\r\n                                    text = { Text(text = title) })\r\n                            }\r\n                        }\r\n\r\n                        IconButton(modifier = Modifier.bounceClick() , onClick = {\r\n                            viewModel.onCloseAnalyzeComposable()\r\n                        }) {\r\n                            Icon(imageVector = Icons.Outlined.Close , contentDescription = \"Close\")\r\n                        }\r\n                    }\r\n\r\n                    HorizontalPager(\r\n                        modifier = Modifier.hapticPagerSwipe(pagerState) ,\r\n                        state = pagerState ,\r\n                    ) { page ->\r\n                        val filesForCurrentPage = groupedFiles[tabs[page]] ?: emptyList()\r\n\r\n                        val filesByDate = filesForCurrentPage.groupBy { file ->\r\n                            SimpleDateFormat(\r\n                                \"yyyy-MM-dd\" , Locale.getDefault()\r\n                            ).format(Date(file.lastModified()))\r\n                        }\r\n\r\n                        LazyColumn(\r\n                            modifier = Modifier.fillMaxSize() ,\r\n                        ) {\r\n\r\n                            val sortedDates = filesByDate.keys.sortedByDescending { dateString ->\r\n                                return@sortedByDescending SimpleDateFormat(\r\n                                    \"yyyy-MM-dd\" ,\r\n                                    Locale.getDefault()\r\n                                ).parse(dateString)\r\n                            }\r\n                            sortedDates.forEach { date ->\r\n                                val files = filesByDate[date] ?: emptyList()\r\n                                item(key = date) {\r\n                                    Row(\r\n                                        modifier = Modifier\r\n                                                .fillMaxWidth()\r\n                                                .padding(horizontal = 8.dp , vertical = 4.dp) ,\r\n                                        verticalAlignment = Alignment.CenterVertically ,\r\n                                        horizontalArrangement = Arrangement.SpaceBetween\r\n                                    ) {\r\n                                        Text(\r\n                                            modifier = Modifier.padding(start = 8.dp) ,\r\n                                            text = TimeHelper.formatDate(Date(files[0].lastModified()))\r\n                                        )\r\n                                        val allFilesForDateSelected =\r\n                                                files.all { uiState.fileSelectionStates[it] == true }\r\n                                        Checkbox(modifier = Modifier.bounceClick() ,\r\n                                                 checked = allFilesForDateSelected ,\r\n                                                 onCheckedChange = { isChecked ->\r\n                                                     files.forEach { file ->\r\n                                                         viewModel.onFileSelectionChange(\r\n                                                             file , isChecked\r\n                                                         )\r\n                                                     }\r\n                                                 })\r\n                                    }\r\n                                }\r\n\r\n                                item(key = \"$date-grid\") {\r\n                                    Box(\r\n                                        modifier = Modifier.fillMaxSize()\r\n                                    ) {\r\n                                        NonLazyGrid(\r\n                                            columns = 3 ,\r\n                                            itemCount = files.size ,\r\n                                            modifier = Modifier.padding(horizontal = 8.dp)\r\n                                        ) { index ->\r\n                                            FileCard(\r\n                                                file = files[index] ,\r\n                                                viewModel = viewModel ,\r\n                                                imageLoader = imageLoader\r\n                                            )\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (uiState.scannedFiles.isNotEmpty()) {\r\n            Row(\r\n                modifier = Modifier.fillMaxWidth() ,\r\n                verticalAlignment = Alignment.CenterVertically ,\r\n                horizontalArrangement = Arrangement.SpaceBetween ,\r\n            ) {\r\n                val statusText : String = if (uiState.selectedFileCount > 0) {\r\n                    stringResource(id = R.string.status_selected_files , uiState.selectedFileCount)\r\n                }\r\n                else {\r\n                    stringResource(id = R.string.status_no_files_selected)\r\n                }\r\n                val statusColor : Color by animateColorAsState(\r\n                    targetValue = if (uiState.selectedFileCount > 0) {\r\n                        MaterialTheme.colorScheme.primary\r\n                    }\r\n                    else {\r\n                        MaterialTheme.colorScheme.secondary\r\n                    } , animationSpec = tween() , label = \"Selected Files Status Color Animation\"\r\n                )\r\n\r\n                Text(\r\n                    text = statusText ,\r\n                    color = statusColor ,\r\n                    modifier = Modifier.animateContentSize()\r\n                )\r\n                SelectAllComposable(viewModel)\r\n            }\r\n\r\n            Row(\r\n                modifier = Modifier.fillMaxWidth() , horizontalArrangement = Arrangement.SpaceAround\r\n            ) {\r\n                OutlinedButton(\r\n                    enabled = false , // TODO: Currently false by default because there's no trash\r\n                    onClick = {\r\n                        // TODO: add trash\r\n                    } ,\r\n                    modifier = Modifier\r\n                            .weight(1f)\r\n                            .bounceClick() ,\r\n                    colors = ButtonDefaults.outlinedButtonColors(contentColor = Color.Black)\r\n                ) {\r\n                    Icon(\r\n                        imageVector = Icons.Outlined.Delete ,\r\n                        contentDescription = \"Move to trash\" ,\r\n                        modifier = Modifier.size(ButtonDefaults.IconSize)\r\n                    )\r\n                    Spacer(Modifier.size(ButtonDefaults.IconSpacing))\r\n                    Text(text = \"Move to trash\")\r\n                }\r\n\r\n                Spacer(Modifier.width(8.dp))\r\n\r\n                Button(\r\n                    enabled = enabled ,\r\n                    onClick = {\r\n                        viewModel.clean()\r\n                    } ,\r\n                    modifier = Modifier\r\n                            .weight(1f)\r\n                            .bounceClick() ,\r\n                    colors = ButtonDefaults.buttonColors(contentColor = Color.White)\r\n                ) {\r\n                    Icon(\r\n                        imageVector = Icons.Outlined.DeleteForever ,\r\n                        contentDescription = \"Delete forever\" ,\r\n                        modifier = Modifier.size(ButtonDefaults.IconSize)\r\n                    )\r\n                    Spacer(Modifier.size(ButtonDefaults.IconSpacing))\r\n                    Text(text = \"Delete forever\")\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun FileCard(file : File , viewModel : HomeViewModel , imageLoader : ImageLoader) {\r\n    val context : Context = LocalContext.current\r\n    val fileExtension : String = remember(file.name) { getFileExtension(file.name) }\r\n\r\n    val imageExtensions =\r\n            remember { context.resources.getStringArray(R.array.image_extensions).toList() }\r\n    val videoExtensions =\r\n            remember { context.resources.getStringArray(R.array.video_extensions).toList() }\r\n\r\n    Card(\r\n        modifier = Modifier\r\n                .fillMaxWidth()\r\n                .aspectRatio(ratio = 1f)\r\n                .bounceClick() ,\r\n    ) {\r\n        Box(modifier = Modifier.fillMaxSize()) {\r\n            when (fileExtension) {\r\n                in imageExtensions -> {\r\n                    AsyncImage(\r\n                        model = remember(file) {\r\n                            ImageRequest.Builder(context).data(file).size(64)\r\n                                    .crossfade(enable = true).build()\r\n                        } ,\r\n                        imageLoader = imageLoader ,\r\n                        contentDescription = file.name ,\r\n                        contentScale = ContentScale.Crop ,\r\n                        modifier = Modifier.fillMaxSize() ,\r\n                    )\r\n                }\r\n\r\n                in videoExtensions -> {\r\n                    AsyncImage(\r\n                        model = remember(file) {\r\n                            ImageRequest.Builder(context).data(file)\r\n                                    .decoderFactory { result, options, _ ->\r\n                                        VideoFrameDecoder(result.source, options)\r\n                                    }\r\n                                    .videoFramePercent(framePercent = 0.5)\r\n                                    .crossfade(enable = true).build()\r\n                        },\r\n                        imageLoader = imageLoader,\r\n                        contentDescription = file.name,\r\n                        contentScale = ContentScale.Crop,\r\n                        modifier = Modifier.fillMaxSize()\r\n                    )\r\n                }\r\n\r\n                else -> {\r\n                    val fileIcon = remember(fileExtension) {\r\n                        getFileIcon(\r\n                            fileExtension , context\r\n                        )\r\n                    }\r\n                    Icon(\r\n                        painter = painterResource(fileIcon) ,\r\n                        contentDescription = null ,\r\n                        modifier = Modifier\r\n                                .size(24.dp)\r\n                                .align(Alignment.Center)\r\n                    )\r\n                }\r\n            }\r\n\r\n            Checkbox(checked = viewModel.uiState.value.fileSelectionStates[file] ?: false ,\r\n                     onCheckedChange = { isChecked ->\r\n                         viewModel.onFileSelectionChange(file , isChecked)\r\n                     } ,\r\n                     modifier = Modifier.align(Alignment.TopEnd))\r\n\r\n            Text(\r\n                text = file.name ,\r\n                maxLines = 1 ,\r\n                overflow = TextOverflow.Ellipsis ,\r\n                modifier = Modifier\r\n                        .fillMaxWidth()\r\n                        .background(\r\n                            color = Color.Black.copy(alpha = 0.4f)\r\n                        )\r\n                        .padding(8.dp)\r\n                        .align(Alignment.BottomCenter)\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Composable function for selecting or deselecting all items.\r\n *\r\n * This composable displays a filter chip labeled \"Select All\". When tapped, it toggles the\r\n * selection state and invokes the `onCheckedChange` callback.\r\n *\r\n * @param checked A boolean value indicating whether all items are currently selected.\r\n * @param onCheckedChange A callback function that is invoked when the user taps the chip to change the selection state.\r\n */\r\n@Composable\r\nfun SelectAllComposable(\r\n    viewModel : HomeViewModel ,\r\n) {\r\n    val uiState : UiHomeModel by viewModel.uiState.collectAsState()\r\n\r\n    Row(\r\n        modifier = Modifier\r\n                .fillMaxWidth()\r\n                .animateContentSize() ,\r\n        verticalAlignment = Alignment.CenterVertically ,\r\n        horizontalArrangement = Arrangement.End\r\n    ) {\r\n        val interactionSource : MutableInteractionSource = remember { MutableInteractionSource() }\r\n        FilterChip(\r\n            modifier = Modifier.bounceClick() ,\r\n            selected = uiState.allFilesSelected ,\r\n            onClick = {\r\n                viewModel.toggleSelectAllFiles()\r\n            } ,\r\n            label = { Text(stringResource(id = R.string.select_all)) } ,\r\n            leadingIcon = {\r\n                AnimatedContent(\r\n                    targetState = uiState.allFilesSelected , label = \"Checkmark Animation\"\r\n                ) { targetChecked ->\r\n                    if (targetChecked) {\r\n                        Icon(\r\n                            imageVector = Icons.Filled.Check ,\r\n                            contentDescription = null ,\r\n                        )\r\n                    }\r\n                }\r\n            } ,\r\n            interactionSource = interactionSource ,\r\n        )\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/kotlin/com/d4rk/cleaner/ui/screens/home/HomeScreen.kt b/app/src/main/kotlin/com/d4rk/cleaner/ui/screens/home/HomeScreen.kt
--- a/app/src/main/kotlin/com/d4rk/cleaner/ui/screens/home/HomeScreen.kt	(revision 57c1e1bfa29ea2909c3b8e44202c38eb1a5c37c7)
+++ b/app/src/main/kotlin/com/d4rk/cleaner/ui/screens/home/HomeScreen.kt	(date 1727770813772)
@@ -64,6 +64,7 @@
 import androidx.compose.ui.layout.ContentScale
 import androidx.compose.ui.platform.LocalContext
 import androidx.compose.ui.res.painterResource
+import androidx.compose.ui.res.stringArrayResource
 import androidx.compose.ui.res.stringResource
 import androidx.compose.ui.text.style.TextOverflow
 import androidx.compose.ui.unit.dp
@@ -175,38 +176,40 @@
     val archiveExtensions =
             remember { context.resources.getStringArray(R.array.archive_extensions) }
 
+    val filesTypesStrings: List<String> = stringArrayResource(R.array.file_types_titles).toList()
+
     val groupedFiles = remember(
-        uiState.scannedFiles ,
-        apkExtensions ,
-        imageExtensions ,
-        videoExtensions ,
-        audioExtensions ,
+        uiState.scannedFiles,
+        apkExtensions,
+        imageExtensions,
+        videoExtensions,
+        audioExtensions,
         archiveExtensions
     ) {
         uiState.scannedFiles.groupBy { file ->
             when (file.extension.lowercase()) {
-                in apkExtensions -> {
-                    return@groupBy "APKs"
-                }
-
                 in imageExtensions -> {
-                    return@groupBy "Images"
+                    return@groupBy filesTypesStrings[0]
+                }
+
+                in apkExtensions -> {
+                    return@groupBy filesTypesStrings[3]
                 }
 
                 in videoExtensions -> {
-                    return@groupBy "Videos"
+                    return@groupBy filesTypesStrings[2]
                 }
 
                 in audioExtensions -> {
-                    return@groupBy "Audios"
+                    return@groupBy filesTypesStrings[1]
                 }
 
                 in archiveExtensions -> {
-                    return@groupBy "Archives"
+                    return@groupBy filesTypesStrings[4]
                 }
 
                 else -> {
-                    return@groupBy "Others"
+                    return@groupBy filesTypesStrings[5] // Others
                 }
             }
         }
Index: app/src/main/res/values/arrays.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <string-array name=\"generic_extensions\">\r\n        <item>DS_Store</item>\r\n        <item>Spotlight-V100</item>\r\n        <item>fseventsd</item>\r\n        <item>log</item>\r\n        <item>logs</item>\r\n        <item>old</item>\r\n        <item>tmp</item>\r\n        <item>temp</item>\r\n        <item>splashad</item>\r\n        <item>db</item>\r\n        <item>nomedia</item>\r\n    </string-array>\r\n\r\n    <string-array name=\"apk_extensions\">\r\n        <item>apk</item>\r\n        <item>apks</item>\r\n        <item>apkm</item>\r\n        <item>apkx</item>\r\n        <item>aab</item>\r\n    </string-array>\r\n\r\n    <string-array name=\"microsoft_office_extensions\">\r\n        <item>doc</item>\r\n        <item>dot</item>\r\n        <item>wbk</item>\r\n        <item>docx</item>\r\n        <item>docm</item>\r\n        <item>dotx</item>\r\n        <item>dotm</item>\r\n        <item>docb</item>\r\n        <item>pdf</item>\r\n        <item>wll</item>\r\n        <item>wwl</item>\r\n        <item>xls</item>\r\n        <item>xlt</item>\r\n        <item>xlm</item>\r\n        <item>xlsx</item>\r\n        <item>xlsm</item>\r\n        <item>xltx</item>\r\n        <item>xltm</item>\r\n        <item>xlsb</item>\r\n        <item>xla</item>\r\n        <item>xlam</item>\r\n        <item>xll</item>\r\n        <item>xlw</item>\r\n        <item>ppt</item>\r\n        <item>pot</item>\r\n        <item>pps</item>\r\n        <item>ppa</item>\r\n        <item>pptx</item>\r\n        <item>pptm</item>\r\n        <item>potx</item>\r\n        <item>potm</item>\r\n        <item>ppam</item>\r\n        <item>ppsx</item>\r\n        <item>ppsm</item>\r\n        <item>sldx</item>\r\n        <item>sldm</item>\r\n        <item>ppam</item>\r\n        <item>accda</item>\r\n        <item>accdb</item>\r\n        <item>accde</item>\r\n        <item>accdr</item>\r\n        <item>accdt</item>\r\n        <item>accdu</item>\r\n        <item>one</item>\r\n        <item>ecf</item>\r\n        <item>pub</item>\r\n    </string-array>\r\n\r\n    <string-array name=\"archive_extensions\">\r\n        <item>7z</item>\r\n        <item>ace</item>\r\n        <item>arj</item>\r\n        <item>bz</item>\r\n        <item>bz2</item>\r\n        <item>cab</item>\r\n        <item>cb7</item>\r\n        <item>cbt</item>\r\n        <item>cbz</item>\r\n        <item>cbr</item>\r\n        <item>dgc</item>\r\n        <item>dmg</item>\r\n        <item>ear</item>\r\n        <item>gz</item>\r\n        <item>gzip</item>\r\n        <item>ha</item>\r\n        <item>ice</item>\r\n        <item>jar</item>\r\n        <item>kgb</item>\r\n        <item>lzh</item>\r\n        <item>lz</item>\r\n        <item>lzma</item>\r\n        <item>lzo</item>\r\n        <item>pak</item>\r\n        <item>partimg</item>\r\n        <item>pea</item>\r\n        <item>pet</item>\r\n        <item>pk3</item>\r\n        <item>pk4</item>\r\n        <item>rar</item>\r\n        <item>rpm</item>\r\n        <item>rz</item>\r\n        <item>s7z</item>\r\n        <item>sda</item>\r\n        <item>sea</item>\r\n        <item>sen</item>\r\n        <item>sfark</item>\r\n        <item>sfx</item>\r\n        <item>shar</item>\r\n        <item>sit</item>\r\n        <item>sitx</item>\r\n        <item>sqx</item>\r\n        <item>tar</item>\r\n        <item>tar.bz2</item>\r\n        <item>tar.gz</item>\r\n        <item>tar.xz</item>\r\n        <item>tgz</item>\r\n        <item>tlz</item>\r\n        <item>txz</item>\r\n        <item>udf</item>\r\n        <item>utz</item>\r\n        <item>uu</item>\r\n        <item>uue</item>\r\n        <item>war</item>\r\n        <item>wim</item>\r\n        <item>xar</item>\r\n        <item>xp3</item>\r\n        <item>xz</item>\r\n        <item>z</item>\r\n        <item>zip</item>\r\n        <item>zipx</item>\r\n        <item>zoo</item>\r\n        <item>zpaq</item>\r\n    </string-array>\r\n\r\n    <string-array name=\"audio_extensions\">\r\n        <item>mp3</item>\r\n        <item>m4a</item>\r\n        <item>wav</item>\r\n        <item>flac</item>\r\n        <item>midi</item>\r\n        <item>wma</item>\r\n        <item>aac</item>\r\n        <item>ogg</item>\r\n        <item>opus</item>\r\n        <item>aiff</item>\r\n    </string-array>\r\n\r\n    <string-array name=\"video_extensions\">\r\n        <item>mp4</item>\r\n        <item>avi</item>\r\n        <item>mov</item>\r\n        <item>mkv</item>\r\n        <item>flv</item>\r\n        <item>webm</item>\r\n        <item>vob</item>\r\n        <item>ogv</item>\r\n        <item>gif</item>\r\n        <item>gifv</item>\r\n        <item>mng</item>\r\n        <item>wmv</item>\r\n        <item>yuv</item>\r\n        <item>amv</item>\r\n    </string-array>\r\n\r\n    <string-array name=\"image_extensions\">\r\n        <item>jpg</item>\r\n        <item>jpeg</item>\r\n        <item>webp</item>\r\n        <item>bmp</item>\r\n        <item>png</item>\r\n        <item>raw</item>\r\n        <item>psd</item>\r\n    </string-array>\r\n\r\n    <string-array name=\"windows_extensions\">\r\n        <item>exe</item>\r\n        <item>msi</item>\r\n        <item>ini</item>\r\n    </string-array>\r\n\r\n    <string-array name=\"font_extensions\">\r\n        <item>ttf</item>\r\n        <item>otf</item>\r\n    </string-array>\r\n\r\n    <string-array name=\"aggressive_filter_files\">\r\n        <item>nomedia</item>\r\n        <item>splashad</item>\r\n        <item>csv</item>\r\n        <item>thumbs?.db</item>\r\n        <item>thumb[0–9]</item>\r\n        <item>pxr</item>\r\n        <item>xd</item>\r\n        <item>.xml</item>\r\n        <item>.z</item>\r\n        <item>.tar</item>\r\n        <item>.gz</item>\r\n        <item>.iso</item>\r\n        <item>.cab</item>\r\n        <item>.jar</item>\r\n        <item>.dng</item>\r\n        <item>.bz2</item>\r\n        <item>.lzh</item>\r\n        <item>.lzma</item>\r\n        <item>.ace</item>\r\n        <item>.arj</item>\r\n        <item>.deb</item>\r\n        <item>.rpm</item>\r\n        <item>.tar.gz</item>\r\n        <item>.tar.xz</item>\r\n        <item>.gz.tar</item>\r\n        <item>.bz2tar</item>\r\n        <item>.xz.tar</item>\r\n        <item>.z</item>\r\n        <item>.lz</item>\r\n        <item>.txt</item>\r\n        <item>.viz</item>\r\n        <item>.psxpj</item>\r\n        <item>.htm</item>\r\n        <item>.html</item>\r\n    </string-array>\r\n\r\n    <string-array name=\"aggressive_filter_folders\">\r\n        <item>.Trash</item>\r\n        <item>.DS_Store</item>\r\n        <item>.estrongs</item>\r\n        <item>.facebook_cache</item>\r\n        <item>.spotlight-V100</item>\r\n        <item>.thumbnails</item>\r\n        <item>Ads</item>\r\n        <item>AnyDesk</item>\r\n        <item>Apk Editor</item>\r\n        <item>Apk Editor Plus</item>\r\n        <item>Apk Editor Pro</item>\r\n        <item>Audiobooks</item>\r\n        <item>Bluetoooth</item>\r\n        <item>Bluetooth</item>\r\n        <item>Bugreport</item>\r\n        <item>Cache</item>\r\n        <item>Camera</item>\r\n        <item>DCIM</item>\r\n        <item>Desktop.ini</item>\r\n        <item>Discord</item>\r\n        <item>Download</item>\r\n        <item>Downloads</item>\r\n        <item>Fseventsd</item>\r\n        <item>GBWhatsApp</item>\r\n        <item>GBWhatsApp Animated Gifs</item>\r\n        <item>GBWhatsApp Audio</item>\r\n        <item>GBWhatsApp Documents</item>\r\n        <item>GBWhatsApp Images</item>\r\n        <item>GBWhatsApp Stickers</item>\r\n        <item>GBWhatsApp Video</item>\r\n        <item>Ifont</item>\r\n        <item>Jumobile</item>\r\n        <item>Kinguserdown</item>\r\n        <item>Logs</item>\r\n        <item>Lost.dir</item>\r\n        <item>Media</item>\r\n        <item>Minidump</item>\r\n        <item>Mobvista</item>\r\n        <item>Notifications</item>\r\n        <item>OSSLog</item>\r\n        <item>Photoeditor</item>\r\n        <item>Photos</item>\r\n        <item>Picsart</item>\r\n        <item>Podcasts</item>\r\n        <item>QQSecureDownload</item>\r\n        <item>Ringtones</item>\r\n        <item>Screenshots</item>\r\n        <item>Temp</item>\r\n        <item>Temporary</item>\r\n        <item>Thumbnails?</item>\r\n        <item>Telegram</item>\r\n        <item>Tmp</item>\r\n        <item>Tmp</item>\r\n        <item>Twrp</item>\r\n        <item>Unityadsvideocache</item>\r\n        <item>WhatsApp</item>\r\n        <item>WhatsApp Business</item>\r\n        <item>WhatsApp Animated Gifs</item>\r\n        <item>WhatsApp Audio</item>\r\n        <item>WhatsApp Documents</item>\r\n        <item>WhatsApp Images</item>\r\n        <item>WhatsApp Stickers</item>\r\n        <item>WhatsApp Video</item>\r\n        <item>Xiaoying</item>\r\n    </string-array>\r\n\r\n    <string-array name=\"generic_filter_folders\">\r\n        <item>.AppleDouble</item>\r\n        <item>.DocumentRevisions-V100</item>\r\n        <item>.MobileBackups</item>\r\n        <item>.Spotlight-V100</item>\r\n        <item>.Trashes</item>\r\n        <item>.VolumeIcon.icns</item>\r\n        <item>.android</item>\r\n        <item>.cache</item>\r\n        <item>.gradle</item>\r\n        <item>.idea</item>\r\n        <item>.thumbnails</item>\r\n        <item>.vscode</item>\r\n        <item>AndroidStudioProjects</item>\r\n        <item>Backup</item>\r\n        <item>DCIM/.thumbnails</item>\r\n        <item>Log</item>\r\n        <item>Logs</item>\r\n        <item>Podcasts</item>\r\n        <item>ads</item>\r\n        <item>advertisement</item>\r\n        <item>bin</item>\r\n        <item>backup</item>\r\n        <item>cache</item>\r\n        <item>logs</item>\r\n        <item>node_modules</item>\r\n        <item>obj</item>\r\n        <item>temp</item>\r\n        <item>temporary</item>\r\n        <item>temps</item>\r\n        <item>thumbs</item>\r\n        <item>thumbnails</item>\r\n        <item>target</item>\r\n        <item>tmp</item>\r\n        <item>venv</item>\r\n    </string-array>\r\n\r\n    <string-array name=\"preference_startup_entries\">\r\n        <item>Home</item>\r\n        <item>App Manager</item>\r\n        <item>Memory Manager</item>\r\n    </string-array>\r\n    <string-array name=\"preference_startup_values\">\r\n        <item>home</item>\r\n        <item>app_manager</item>\r\n        <item>memory_manager</item>\r\n    </string-array>\r\n\r\n    <string-array name=\"preference_language_entries\">\r\n        <item>@string/bulgarian</item>\r\n        <item>@string/english</item>\r\n        <item>@string/french</item>\r\n        <item>@string/german</item>\r\n        <item>@string/hindi</item>\r\n        <item>@string/hungarian</item>\r\n        <item>@string/indonesian</item>\r\n        <item>@string/italian</item>\r\n        <item>@string/japanese</item>\r\n        <item>@string/polish</item>\r\n        <item>@string/romanian</item>\r\n        <item>@string/russian</item>\r\n        <item>@string/spanish</item>\r\n        <item>@string/turkish</item>\r\n        <item>@string/ukrainian</item>\r\n        <item>@string/traditional_chinese</item>\r\n    </string-array>\r\n    <string-array name=\"preference_language_values\">\r\n        <item>bg</item>\r\n        <item>en</item>\r\n        <item>fr</item>\r\n        <item>de</item>\r\n        <item>hi</item>\r\n        <item>hu</item>\r\n        <item>in</item>\r\n        <item>it</item>\r\n        <item>ja</item>\r\n        <item>pl</item>\r\n        <item>ro</item>\r\n        <item>ru</item>\r\n        <item>es</item>\r\n        <item>tr</item>\r\n        <item>uk</item>\r\n        <item>zh-rTW</item>\r\n    </string-array>\r\n    <string-array name=\"file_sizes\">\r\n        <item>200</item>\r\n        <item>400</item>\r\n        <item>600</item>\r\n        <item>800</item>\r\n        <item>900</item>\r\n    </string-array>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/arrays.xml b/app/src/main/res/values/arrays.xml
--- a/app/src/main/res/values/arrays.xml	(revision 57c1e1bfa29ea2909c3b8e44202c38eb1a5c37c7)
+++ b/app/src/main/res/values/arrays.xml	(date 1727770683071)
@@ -1,4 +1,13 @@
 <resources>
+    <string-array name="file_types_titles">
+        <item>@string/images</item>
+        <item>@string/audios</item>
+        <item>@string/videos</item>
+        <item>@string/apks</item>
+        <item>@string/archives</item>
+        <item>@string/other</item>
+    </string-array>
+
     <string-array name="generic_extensions">
         <item>DS_Store</item>
         <item>Spotlight-V100</item>
Index: CHANGELOG.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Version 2.0.0:\r\n\r\n- **New**: Added a progress bar to the main screen, offering an approximate visualization of storage\r\n  usage.\r\n- **New**: Users can now select specific files for deletion after the scan completes, allowing for\r\n  granular control.\r\n- **New**: Enhanced the post-scan screen to display previews of images and videos, aiding in file\r\n  selection.\r\n- **New**: Introduced the option to select all files for deletion, streamlining the cleaning\r\n  process.\r\n- **New**: Completely overhauled the memory manager, now showcasing storage usage categorized by\r\n  file types.\r\n- **New**: Added support for dynamic colors on compatible devices, allowing the app to adapt to\r\n  system-wide color palettes.\r\n- **New**: Refined the AMOLED theme for a more immersive dark mode experience.\r\n- **New**: Incorporated updated translations thanks to valuable contributions from the community.\r\n- **New**: Introduced a dedicated section for managing security and privacy settings within the app.\r\n- **New**: Implemented new animations and improved overall app responsiveness for a smoother user\r\n  experience.\r\n- **Major**: Migrated the entire app to Jetpack Compose, providing a modern and improved user\r\n  interface.\r\n- **Major**: Completely reworked the app's logic using view models and coroutines for enhanced\r\n  performance and maintainability.\r\n\r\n# Version 1.1.0:\r\n\r\n- **Minor**: Added GitHub issues templates.\r\n- **Minor**: Updated project dependencies.\r\n- **Minor**: Improved the user experience in Help and Feedback page.\r\n- **Minor**: Made minor under-the-hood improvements for a better overall app experience.\r\n- **Patch**: Fixed an issue that caused the app to crash when the device was rotated during the\r\n  cleaning or scanning process.\r\n- **Patch**: Fixed an issue encountered on Android 14 where the application was requesting photo\r\n  permissions and initiating the photo picker API.\r\n- **Patch**: Fixed an issue in the Image Optimizer that led to a crash when no gallery application\r\n  was installed on the user’s device.\r\n\r\n# Version 1.0.0:\r\n\r\n- **New**: Added multiple languages support for the app.\r\n- **New**: Added a new bottom app bar for the main components of the cleaner to be more accessible\r\n  for the user.\r\n- **New**: Added legal notices and more information about permissions.\r\n- **New**: Added a bug report feature to report bugs on GitHub.\r\n- **New**: Added many display customizations for the app.\r\n- **New**: Added a new GDPR message to comply with Google Play policy.\r\n- **New**: Added new custom startup animations.\r\n- **New**: Added support for AMOLED themes.\r\n- **New**: APK sharing functionality has been improved to ensure the proper sharing of APK files.\r\n- **Major**: Migrated the app to Semantic Versioning (SemVer).\r\n- **Major**: Reworked the settings page and organized it way better.\r\n- **Major**: Reworked the file list menu, providing a more intuitive and efficient user experience.\r\n- **Major**: Reworked the Image Optimizer by adding quick compression, manual compression and file\r\n  compression.\r\n- **Minor**: Reset the version to 1.0.0 for a fresh start.\r\n- **Minor**: Replaced toasts with snack bars for all notifications.\r\n- **Minor**: Addressed an aesthetic concern by optimizing the display of the temperature icon when\r\n  the application operates in dark mode.\r\n- **Patch**: Rectified an issue where the uninstall item was inappropriately located within both the\r\n  APKs and System apps tabs, ensuring a more streamlined and intuitive user experience.\r\n- **Patch**: Improved the ads initialization and loading for a better user experience.\r\n- **Patch**: Improved permissions handling logic for improved security and user experience.\r\n- **Patch**: Improved the app's logical parent activities.\r\n- **Patch**: Fixed daily clean running when is turned off from settings.\r\n- **Patch**: Fixed memory manager crashes when trying to exit and enter.\r\n- **Patch**: Fixed the whitelist save issue.\r\n- **Patch**: Fixed uninstall option from the App Manager.\r\n- **Patch**: Fixed app crashes caused by the image optimizer.\r\n- **Patch**: Made various under-the-hood improvements for a better overall app experience.
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CHANGELOG.md b/CHANGELOG.md
--- a/CHANGELOG.md	(revision 57c1e1bfa29ea2909c3b8e44202c38eb1a5c37c7)
+++ b/CHANGELOG.md	(date 1727541947448)
@@ -1,3 +1,39 @@
+# Version 3.0.0:
+
+- **New**: Completely redesigned the Home and Analyze screens for a more intuitive and visually
+  appealing user interface.
+- **New**: Implemented date-based filtering in the Analyze screen, allowing for easier file
+  selection and management.
+- **Patch**:Resolved an issue where APK installation from the App Manager was not functioning
+  correctly.
+- **Patch**:Improved the "Select All" button behavior in the App Manager to ensure accurate state
+  representation.
+- **New**: Introduced loading indicators in the App Manager for a smoother and more informative
+  experience.
+- **New**: Added messages to indicate when no apps or APKs are found.
+- **Patch**:Optimized app loading speed in the App Manager through code refactoring and efficiency
+  improvements.
+- **New**: Enabled real-time RAM usage monitoring in the Memory Manager.
+- **New**: Added a loading animation to the Memory Manager for visual feedback during data
+  retrieval.
+- **New**: Introduced a new setting to customize the app's startup page, providing users with
+  greater control over their initial experience.
+- **New**: Added an option to disable the bounce click effect for users who prefer a more
+  traditional interaction style.
+- **Patch**:Resolved an issue where language selection was not consistently applied.
+- **New**: Added a snackbar notification for older Android versions when users copy device
+  information from the About section.
+- **New**: Integrated haptic feedback for swipe gestures, enhancing the tactile response and user
+  experience.
+- **New**: Implemented sound effects on tap interactions for a more engaging experience.
+- **New**: Redesigned the Settings page, aligning it with the modern aesthetics of the Android 15
+  design system.
+- **Minor**: Backported the app to support devices running Android 6.0 and above.
+- **Patch**:Fixed visual glitches within the App Manager.
+- **Major**: Restructured the app's code flow for improved organization and future extensibility.
+- **Major**: Implemented a robust error handling mechanism to gracefully manage unexpected
+  situations and provide helpful feedback to users.
+
 # Version 2.0.0:
 
 - **New**: Added a progress bar to the main screen, offering an approximate visualization of storage
